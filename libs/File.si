class File {
	method init(fileName, mode="r") {
		this.io = load system.io
		this.file = fileName
		this.mode = mode
		io.init(fileName, mode)
	}

	method readAllLines(lineTerminator="\r\n") {
		if mode!="r" && mode!="rw" {
			print("ERROR: file opened with wrong mode")
			return
		}
		return split(io.readAllText(), lineTerminator)
	}

	method read() {
		if mode!="r" && mode!="rw" {
			print("ERROR: file opened with wrong mode")
			return
		}
		return io.readAllText()
	}

	method readBytes(offset, count) {
		if mode!="r" && mode!="rw" {
			print("ERROR: file opened with wrong mode")
			return
		}
		return io.read(offset, count)
	}
	
	method readAllBytes() {
		if mode!="r" && mode!="rw" {
			print("ERROR: file opened with wrong mode")
			return
		}
		return io.read(0, io.getLength())
	}

	method readByte() {
		if mode!="r" && mode!="rw" {
			print("ERROR: file opened with wrong mode")
			return
		}
		return io.readByte()
	}

	method write(text, flush=true) {
		if mode!="w" && mode!="rw" {
			print("ERROR: file opened with wrong mode")
			return
		}
		io.writeText(text, flush)
	}

	method writeLine(line, flush=true) {
		if mode!="w" && mode!="rw" {
			print("ERROR: file opened with wrong mode")
			return
		}
		io.writeText(line + "\n", flush)
	}

	method writeBytes(byteList, offset=null, flush=true) {
		if mode!="w" && mode!="rw" {
			print("ERROR: file opened with wrong mode")
			return
		}
		if !offset:
			io.write(byteList, flush)
		else:
			io.writeAt(byteList, offset, flush)
	}

	method writeByte(byte, flush=true) {
		if mode!="w" && mode!="rw" {
			print("ERROR: file opened with wrong mode")
			return
		}
		io.writeByte(byte, flush)
	}

	method flush():
		io.flush()

	method close(): 
		io.close()

	method getLength(): 
		return io.getLength()

	method seek(offset, origin="c"):
		io.seek(offset, origin)
}